== Adaptavist (Jira Test Manager)
TAG позволяет использовать Adaptavist. Для этого достаточно сконфигурировать проект и уставноть соответствие между тестами в jira и автотестами проекта.


Прежде всего, в `Jira` должна быть заведена тестовая база - кейсы с привязкой к тикетам.

Предположим, что у нас есть задача в проекте `EFSTAG` - `EFSTAG-945`, к которой нужно привязать тестовые сценарии.

В секции `Traceability` заведем тест:

image:images/create_case.png[]

Задаем имя и, при необходимости, другие параметры, сохраняем:

image:images/save.png[]

После этого появиться информация, что тест кейс сохранен с указанием `id` кейса, в нашем случае - `EFSTAG-T4`:

image:images/saved.png[]

Тест кейс появится в задаче:

image:images/saved-issue.png[]

Просмотреть список тестовых сценариев можно следующим образом:

{counter:ab}. Перейти в раздел `Tests`:

image:images/tests.png[]

{counter:ab}. Найти кейс по `id`:

image:images/tests-id.png[]

Подробную информацию о формировании тестовой структуры в jira можно найти в документации link:https://www.adaptavist.com/doco/display/KT/Documentation[Adaptavist]

=== Настройка для Cucumber

{counter:ac}. Дописать в test runner в опцию plugin две строки:

[source,]
----
@RunWith(Cucumber.class)
@CucumberOptions(monochrome = true, 
        plugin = {"pretty","junit:target/cucumber/result.xml",
                           "json:target/cucumber/pagefactory.json"},
        glue = {"ru.sbtqa.tag.stepdefs",  "setting", "pagefactory.stepdefs"},
        features = {"src/test/resources/features"}
)
public class CucumberTest {}
----

TIP: При необходимости можно задать несколько run-файлов, формируя результаты в разные файлы (в нашем случае файл `pagefactory.json`)

{counter:ac}. Если в вашем проекте в файле `pom.xml` для плагина `maven-surefire-plugin` есть строка запуска, то аналогичным образом нужно добавить в нее две строки:

[source,]
----
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${surefire.version}</version>
        <configuration>
          <argLine>
            -Dcucumber.options="--plugin junit:target/cucumber/result.xml --plugin json:target/cucumber/pagefactory.json"
          </argLine>
        </configuration>
        
        ....
        
      </plugin>
----

Теперь, когда `Adaptavist` подключен, необходимо установить соответствие тестового сценария и сценария в `Jira`. Для этого нужно расставить тэги `@TestCaseKey`. В качестве значения тэга указывается `id` кейса. Например:

[source,]
----
  @TestCaseKey=EFSTAG-T4
  Scenario: Test Stash
    * user checks that the field "first name" is empty
    
    ....
    
----
==== Сборка результатов тестов

Для сборки отчетов для `Adaptavist` достаточно выполнить 

[source,]
----
  mvn clean test
----

После этого по указанному в "plugin" пути должен появиться заданный json-файл. В нашем случае в каталоге `target/cucumber` файл `pagefactory.json`

====  Синхронизация результатов для `Cucumber`

===== При локальном запуске

{counter:ae}. Выполнить из командной строки в директории проекта либо создать вручную zip-архив, положив в него сгенерированные json-файлы

[source,]
----
 zip output_results.zip target/cucumber/*.json
----

{counter:ae}. Выполнить 
[source,]
----
curl -k --basic --user user:password -F "file=@output_results.zip" https://sbtatlas.sigma.sbrf.ru/jira/rest/atm/1.0/automation/execution/cucumber/EFSTAG?autoCreateTestCases=true
----

При этом:

* Вместо `user` подставить пользователя `Jira`, вместо `password` - пароль пользователя
* При необходимости изменить `URL` для `Jira`
* Вместо `EFSTAG` подставить имя проекта

=== Настройка для JUnit

{counter:ad}. Добавить в `pom.xml` зависимость:

[source,]
----
    <dependency>
      <groupId>com.adaptavist</groupId>
      <artifactId>tm4j-junit-integration</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
----

{counter:ad}. Добавить в `pom.xml` для плагина `maven-surefire-plugin` listener:

[source,]
----
    <properties>
      <property>
        <name>listener</name>
        <value>com.adaptavist.tm4j.junit.ExecutionListener</value>
      </property>
    </properties>
----

{counter:ad}. Закрепить за `JUnit` тестами тесты в `Jira` через `id`:

[source,]
----
    @Test 
    @TestCase(name = "Test Stash") 
    public void testName() { 
        ....
    }
----

Или имя сценария:

[source,]
----
    @Test 
    @TestCase(name = "Test Stash") 
    public void testName() { 
        ....
    }
----

Синхронизация результатов


4. При локальном запуске выполнить из директории проекта (где лежит target)

 zip output_results.zip target/cucumber/*.json

5. curl -k --basic --user user:password -F "file=@output_results.zip" https://sbtatlas.sigma.sbrf.ru/jira/rest/atm/1.0/automation/execution/cucumber/EFSTAG?autoCreateTestCases=true
вместо EFSTAG имя проекта




