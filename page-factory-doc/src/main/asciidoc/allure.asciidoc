=== Построение отчетов

По умолчанию {plug} поддерживают создание отчетов с использованием Allure версии 2.

Чтобы настроить автоматическое создание отчетов после прохождения автотестов, нужно сделать следующее:

Для плагина `maven-surefire-plugin` добавить параметр запуска. Пример:

[source,]
----
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.20</version>
        <configuration>
          <argLine>
            -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
            -Dcucumber.options="--plugin io.qameta.allure.cucumber2jvm.AllureCucumber2Jvm --plugin pretty"
          </argLine>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
          </dependency>
        </dependencies>
      </plugin>
----

После выполнения тестов в папке allure-results/ будут созданы json файлы с результатами прохождения тестов - для каждого теста отдельный файл. В отчетах можно в том числе найти скриншоты (в момент падения теста) и ссылки на видео (если велась запись).

Просмотреть результаты в виде страницы-отчета можно https://docs.qameta.io/allure/#_reporting[одним из способов^, role="ext-link"]

==== Отчеты и Fluent API
Для того чтобы отчеты содержали шаги, которые вы используете в тестах без `cucumber`, необходимо следующее:

* Добавить `allure` зависимость в проект
[source,]
----
    <dependency>
      <groupId>io.qameta.allure</groupId>
      <artifactId>allure-junit4</artifactId>
      <version>2.10.0</version>
      <scope>test</scope>
    </dependency>
----

* Добавить `listener` в конфигурацию `maven-surefire-plugin`
[source,]
----
<properties>
  <property>
    <name>listener</name>
    <value>io.qameta.allure.junit4.AllureJunit4</value>
  </property>
</properties>
----

* В случае, если требуется английская локализация фреймворк-шагов, то добавить в `application.properties`
[source,]
----
   junit.lang = en
----
По-умолчанию язык русский.

* Свои методы следует аннотировать @Step

Пример:
[source,java]
----
    @Step("Мой тестовый метод \"{parameter}\"")
    public T yourMethod(String parameter) {
        ...
        return (T) this;
    }
----