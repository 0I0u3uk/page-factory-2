=== Поиск элементов

В качестве параметра для любого шага библиотеки можно передавать:

* элемент или блок
* элемент в блоке
* элемент в списке

==== Описание типов параметров
===== Элемент, блок, список
В качестве параметра поиска может выступать любой типизированный элемент, блок или `WebElement`

Способ обращения в тестовом сценарии::
Значение аанотации `@ElementTitle` элемента, описанного на текущей странице

Пример обращения::
[source,]
----
* текст элемента "Здесь значение аннотации" "текст элемента"
----

Пример на странице::
[source,]
----
@ElementTitle(value = "Здесь значение аннотации")
@FindBy(xpath = "//div")
public TextBlock element;
----

===== Элемент в списке
Это может быть список любых элементов, в том числе блоков

Способ обращения в тестовом сценарии::
Значение аанотации `@ElementTitle` списка элементов (если нужно вернуть первый по-порядку элемент)
Значение аанотации `@ElementTitle` списка элементов + порядковый номер элемента списка (1,2,3...). через разделитель "->"

Пример обращения::
[source,]
----
# предполагается первый по-порядку элемент списка    
* текст элемента "Список элементов" строго равен "текст элемента"

# вернет 2 по-порядку элемент списка
* текст элемента "Список элементов->2" строго равен "текст элемента"
----

Пример на странице::
[source,]
----
@ElementTitle(value = "Список элементов")
@FindBy(xpath = "//div")
public List<TextBlock> list;
----

===== Элемент в блоке
Блок с элементами, объявленный на странице

Способ обращения в тестовом сценарии::
`@ElementTitle` блока + `@ElementTitle` элемента в блоке - через разделитель "->"

Пример обращения::
[source,]
----
* пользователь отмечает признак "Блок->Элемент"
----

Пример на странице::
[source,]
----
@ElementTitle(value = "Блок")
@FindBy(xpath = "//div")
public Block block;
----

TIP: Блоки могут быть вложенными, обращение к ним может идти аналогичным образом. Например `"Блок->Вложенный блок 1->Вложенный блок 2->Элемент"`


==== Описание методов поиска 
NOTE: [aqua]#В качестве параметра можно передавать любой тип из описанных выше, любую их комбинацию, любого уровня вложенности через разделитель `->`#


Обратиться к методам поиска можно следующим образом:
[source, ]
----
((HtmlFindUtils) Environment.getFindUtils()).find("Имя элемента");
----

|====================
| *Метод* | *Описание*
| <T extends WebElement> T find(String name)
| Получает элемент по его имени или пути. Предполагается, что элемент находится на текущей странице

Если элемент будет найден, будет выполнено ожидание появления его на странице


| <T extends WebElement> T find(String name, boolean wait)
| Получает элемент по его имени или пути с возвожностью задать, ожидать появление этого элемента на странице или нет. Предполагается, что элемент находится на текущей странице


| <T extends WebElement> T find(T context, String name, boolean wait) 
| Получает элемент по его имени или пути в заданном контексте с возвожностью задать, ожидать появление этого элемента на странице или нет

В качестве контекста (относительно чего искать элемент) может выступать элемент, внутри которого нужно выполнить поиск


| <T extends WebElement> List<T> findList(T context, String name)
| Получает список элементов по его имени или пути в заданном контексте

В качестве контекста (относительно чего искать элемент) может выступать  элемент, внутри которого нужно выполнить поиск


| <T extends WebElement> T find(String name, Class<T> type)
| Выполняет поиск элемента заданного типа по заданному имени или пути

По умолчанию ожидает появления элемнта на странице


| <T extends WebElement> T find(String name, Class<T> type, boolean wait)
| Выполняет поиск элемента заданного типа по заданному имени или пути с
учетом необходимости ожидания его появления



| <T extends WebElement> T find(String name, List<Class> clazz)
| Выполняет поиск по имени элемента или пути в заданном контексте


По умолчанию ожидает появления элемента на странице

В качетсве второго параметра передается список допустимых типов. Если найденный элемент не будет соответствовать ни одному из допустимых типов, будет выброшено исключение

| static <T extends WebElement> T find(String name, List<Class> clazz, boolean wait)
| Выполняет поиск по имени элемента или пути в заданном контексте с учетом условия ожидания

В качетсве второго параметра передается список допустимых типов. Если найденный элемент не будет соответствовать допустимому типу, будет выброшено исключение
|====================

=== Примеры различных вариантов комбинирования типов
[source,]
----
* пользователь отмечает признак "Блок->список"
* пользователь отмечает признак "Блок->список->2"
* пользователь отмечает признак "Блок с блоком->блок->Список->2"
* текст элемента "Список блоков->3->блок->Список блоков->2->Элемент блока" строго равен "значение"
----
