===== Открытие страницы
Все приведенные ниже шаги выполняют одно и то же действие

[source,]
----
    * пользователь находится на странице "Имя страницы"
    * открывается страница "Имя страницы"
    * открывается вкладка мастера "Имя страницы"
----

WARNING: [red]#Шаги открытия страницы не гарантируют, что страница приложения была открыта и что открыта именно та страница, которая ожидалась, они лишь определяют текущий контекст# (где искать элементы и глагольные выражения, с которыми ниже в сценарии будет происходить взаимодействие)

===== Работа со страницами, вкладками

[source,]
----
    * открывается копия страницы в новой вкладке
    * переключается на соседнюю вкладку
    * URL соответствует "URL"
    * закрывает текущее окно и возвращается на "Имя страницы"
    * нажимает назад в браузере
    * переходит на страницу "Имя страницы" по ссылке
    * переходит на url "URL"
    * открывает url "URL"
    * обновляем страницу
----

===== Работа с алертами
[source,]
----
    * принимает уведомление с текстом "Текст алерта"
    * отклоняет уведомление с текстом "Текст алерта"
----

===== Проверка текста на странице

Проверяет наличие текст на странице вне засисимости в одном он элементе или в нескольких::
[source,]
----
    * проверяет что текст "Текст" появляется на странице
    * проверяет что текст "Текст" отсутствует на странице
----

Проверяет наличие текста хотя бы одном из элементов страницы::
[source,]
----  
    * проверяет что элемент с текстом "Текст" существует
    * проверяет что текст "Текст" отоброжается
----
    
===== Работа с модальными окнами
[source,]
----
    * проверяет что модальное окно с текстом "Текст модального окна" появляется
----

===== Проверка, что элемент в фокусе
[source,]
----
    * в фокусе находится элемент "Имя элемента"
----

===== Как использовать шаги без `cucumber` (Fluent API)

Обратиться к методам-шагам можно следующим образом: `WebSteps.getInstance()`

Пример::
[source,]
----
WebSteps.getInstance().openPage("Main")
                      .click("Contact")
                      .openPage("Contact")
                      .checkEmpty("first name");
----

===== Как использовать шаги проекта без `cucumber`
Чтобы исппользовать кастомные шаги вашего проекта через Fluent API, унаследуйте класс с шагами от `WebGenericSteps` с учетом типизации.

WARNING: Каждый метод вашего класса с шгами должен возварщать объект типа `this` приведенный к `T`

Пример класса::
[source,]
----
public class YourGenericSteps<T extends YourGenericSteps<T>> extends WebGenericSteps<T> {
    public T yourMethod() {
        ...
        return (T) this;
    }
}
----

Далее на основе этого класса нужно создать строго типизированный класс, который позволит до комплияции понимать, с каким контекстом происходит взаимодействие в текущий  момент. Сделать это можно следующим образом:
[source,]
----
public class YourSteps extends YourGenericSteps<YourSteps> {
     private static YourSteps instance;
     
     public static YourSteps getInstance() {
        if (instance == null) {
            instance = new YourSteps();
        }
        return instance;
    }
}
----

Пример работы:
[source,]
----
YourSteps.getInstance().openPage("Main")
                      .yourMethod()
                      .openPage("Contact")
                      .checkEmpty("first name");
----

