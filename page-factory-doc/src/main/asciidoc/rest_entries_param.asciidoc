==== Параметры запроса
Параметры описываются в `Entry`-классе (за исключением формирования запроса из фичи) при помощи аннотаций:

* *__@Body__* - параметр тела запроса
* *__@Header__* - параметр заголовка
* *__@Query__* - query параметр (будет подставлен в URL запроса)
* *__@Cookie__* - парметр cookie

Каждая из этих аннотаций имеет параметр `name`, который является обязательным и определяет непосредственно имя параметра запроса


===== Шаблоны
Если тело запроса представляет собой json, то нужно создать шаблон запроса. Допустим тело запроса имеет вид:

[source,]
----
{
    "name": "Liza",
    "number": "79236666666",
}
----

Тогда шаблон (допустим, users.json файл) можно описать так:
[source,]
----
{
    "name": "${name}",
    "number": "${number}",
}
----

Путь до файла шаблона нужно прописать в аннотации `@Endpoint` запроса в параметре `template`. Например:

[source,]
----
@Endpoint(method = Rest.POST, path = "user", title = "Запрос", template = "users.json")
public class ReplacerEntry extends EndpointEntry {

    @Body(name = "name")
    private String bodyName = "Liza";

    @Body(name = "number")
    private String bodyNumber = "79236666666";
}
----

При этом подстановка в шаблон будет выполнена по соответствию параметра `name` аннотации `@Body` и значения, обозначенного через `${}`

WARNING: Путь до расположения шаблонов указывается относительно каталога тестовых ресурсов `src/test/resources`

При необходимости можно задать кодировку шаблонов, указав нужную в параметре конфигурации:


[source,]
----
api.template.encoding = utf-8
----


===== Передача парметров формы (form-data)
Если нужно передать параметры формы, то достаточно описать параметры для метода. + 
Например:

[source,]
----
@Endpoint(method = Rest.POST, path = "form", title = "Запрос")
public class ReplacerEntry extends EndpointEntry {

    @Body(name = "name")
    private String bodyName = "Liza";

    @Body(name = "number")
    private String bodyNumber = "79236666666";
}
----