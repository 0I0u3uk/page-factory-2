==== Фрагменты

*__Фрагмент__* - набор шагов, который может быть подставлен в любой сценарий вместо заранее определенного шага

Чтобы использовать фрагменты, необходимо прописать в файле конфигурации `aplication.properties`

[source,]
----
fragments.enabled = true
----

Рассмотрим пример::
*__Сценарий A__* - сценарий, в который нужно подставить шаги + 
*__Сценарий B__* - сценарий-фрагмент, шаги которого можно подставить в любой сценарий

image::images/fragment.png[]

Подстановку фрагмента можно выполнить, используя один из шагов

[source,]
----
    * пользователь вставляет фрагмент "Название фрагмента"
    * пользователь вставляет фрагмент "Название фрагмента"
		| параметр 1 | параметр 2 |
		| значение   | значение   |
----

В примере выше "Название фргамента" выделено [lime]#зеленым#. 


===== Как создавать фрагменты
{counter:a}. Создать фичу, которая будет содержать фрагменты + 
{counter:a}. Прописать путь до каталога с фрагментами в файле конфигурациии `application.properties`. Например:

[source,]
----
fragments.path = src/test/resources/fragments
----

TIP: В случае, если этот параметр не указан, то поиск фрагментов будет происходить в директории, которая указана в @CucumberOptions.features

{counter:a}. Создать сценарий-фрагмент + 
{counter:a}. Аннотировать созданный сценарий как `@fragment`


WARNING: [red]#Не используйте фрагменты как независимые тестовые сценарии#


===== Пример параметризованного фрагмента
*__Параметры__*: логин и пароль + 
*__Значения параметров__*: User и 123 + 

image::images/param_fragment.png[]


* В *B* подстановка обозначена символами *"<>"*. Внутри указано имя параметра
* В *А* выполняется вставка фрагмента с параметрами в виде таблицы данных. Первая строка таблицы - имена парметров, вторая - значения


===== Цепочки фргаментов
Допускается использование фрагментов внутри других фрагментов

Пример

image::images/fragments.png[]


WARNING: [red]#*__Не допускается:__* + 
1. Вызывать фрагмент из самого себя + 
2. Зацикливать вызовов фрагментов# + 
 + 
 Эти исключительные ситуации обрабатываются и тесты будут остановлены до запуска обработчика `cucumber`



